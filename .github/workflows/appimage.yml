name: Release Appimage
#concurrency:
  #group: build-${{ github.ref }}
  #cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches: [ "trunk" ]
    paths:
      - '.github/workflows/appimage.yml'
      - 'AppRun'
      - 'version'
      - 'workflow.sh'
      - '!**/docker.yml'
      - '!Dockerfile*'
  pull_request:
    branches: [ "trunk" ]
    paths:
      - '.github/workflows/appimage.yml'
      - 'AppRun'
      - 'version'
      - 'workflow.sh'

jobs:
  # Label of the container job
  build-appimage:
    strategy:
      fail-fast: false
      matrix:
        platform: ['amd64']
    runs-on: ubuntu-latest
    env:
      VERSION: 0.0.26-alpha
      UBUNTU_CODENAME: ${{ matrix.ubuntu_codename }}
      MINISIGN_KEY: RWTWLbO12+ig3lUExIor3xd6DdZaYFEozn8Bu8nIzY3ImuRYQszIQyyy
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Curl source and data
        run: |
          source=0ad-$VERSION-unix-build.tar.xz
          source_sum=$source.sha1sum
          for file in $source $source_sum; do
            curl -LO "$URI/$file"
          done
          sha1sum -c $source_sum
          tar xJf $WORKSPACE/$source
          data=0ad-$VERSION-unix-data.tar.xz
          data_sum=$data.sha1sum
          echo "Getting data and extracting archive..."
          for file in $data $data_sum; do
              curl -LO "$URI/$file"
          done
          sha1sum -c $data_sum
          tar xJf $data
          echo "SOURCE_ROOT=$ACTION_WORKSPACE/0ad-$VERSION" >> $GITHUB_ENV

      - name: Build AppImage
        uses: andy5995/linuxdeploy-build-helper@docs-update
        with:
          platform: ${{ matrix.platform }}
          source_root: $SOURCE_ROOT
          pre_appimage_script: workflow.sh
          linuxdeploy_output_version: $VERSION
          linuxdeploy_args: |
            -d $SOURCE_ROOT/build/resources/0ad.desktop \
            --icon-file=$SOURCE_ROOT/build/resources/0ad.png \
            --icon-filename=0ad \
            --executable $APPDIR/usr/bin/pyrogenesis \
            --library=/usr/lib/x86_64-linux-gnu/libthai.so.0 \
            --custom-apprun=$ACTION_WORKSPACE/AppRun \
            --output appimage \
            --plugin gtk

    - name: Release AppImage
      if: ${{ github.ref == 'refs/heads/trunk' }}
      uses: ncipollo/release-action@v1
      with:
        name: 0ad-${{ env.VERSION }} AppImage
        allowUpdates: True
        prerelease: ${{ contains(env.VERSION, 'svn') || contains(env.VERSION, 'rc') }}
        artifacts: ./out/0ad*.AppImage*
        token: ${{ secrets.GITHUB_TOKEN }}
        omitNameDuringUpdate: True
        omitBodyDuringUpdate: True
        tag: v${{ env.VERSION }}
        replacesArtifacts: false
    - name: Upload Artifacts
      if: ${{ github.ref != 'refs/heads/trunk' }}
      uses: actions/upload-artifact@v3
      with:
        name: AppImage-${{ matrix.platform }}
        path: ./out/0ad*.AppImage*



